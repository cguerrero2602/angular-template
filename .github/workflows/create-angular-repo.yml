name: Create Angular Project

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Name of the Angular project'
        required: true
      repo_name:
        description: 'Name of the new repository'
        required: true

jobs:
  create-project:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install Angular CLI
      - name: Install Angular CLI
        run: npm install -g @angular/cli

      # Create Angular project
      - name: Generate Angular Project
        run: |
          cd /tmp
          npx -p @angular/cli ng new ${{ inputs.project_name }} --defaults --skip-git
          mv ${{ inputs.project_name }} $GITHUB_WORKSPACE/${{ inputs.project_name }}
          cd $GITHUB_WORKSPACE

      # Add deploy-angular.yml for continuous deployment
      - name: Configure Continuous Deployment
        run: |
          mkdir -p ${{ inputs.project_name }}/.github/workflows
          cat <<EOF > ${{ inputs.project_name }}/.github/workflows/deploy-angular.yml
          name: Build, Push and Deploy Angular App

          on:
            push:
              branches:
                - main

          jobs:
            build-push-deploy:
              runs-on: self-hosted # Usa tu runner auto-hospedado

              steps:
                - name: Checkout code
                  uses: actions/checkout@v3

                - name: Set up Node.js
                  uses: actions/setup-node@v3
                  with:
                    node-version: '18'

                - name: Install dependencies
                  run: npm install

                - name: Build Angular App
                  run: npm run build --prod

                - name: Log in to Docker Hub
                  uses: docker/login-action@v2
                  with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

                - name: Build and Push Docker Image
                  run: |
                    docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest .
                    docker push ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest

                - name: Deploy Angular App
                  run: |
                    docker pull ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
                    docker stop ${{ vars.CONTAINER_NAME }} || true
                    docker rm ${{ vars.CONTAINER_NAME }} || true
                    docker run -d --name ${{ vars.CONTAINER_NAME }} -p ${{ vars.PORT }}:80 ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
          EOF

      # Initialize Git and push to the new repository
      - name: Initialize Git
        run: |
          cd ${{ inputs.project_name }}
          git init
          git add .
          git commit -m "Initial commit for ${{ inputs.project_name }}"

      # Create repository in GitHub
      - name: Create Repository with API
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/user/repos \
          -d '{"name":"${{ inputs.repo_name }}","private":true}'

      # Push code to the new repository
      - name: Push to GitHub
        run: |
          git remote add origin https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository_owner }}/${{ inputs.repo_name }}.git
          git branch -M main
          git push -u origin main
